plugins {
    id 'com.android.dynamic-feature'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
}
apply plugin: 'kotlin-android'

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 21
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "fr"
        //resValue("string", "AUTH_BASE_URL", localProperties['AUTH_BASE_URL'])
        buildConfigField("String", "AUTH_BASE_URL", "\"" + localProperties['AUTH_BASE_URL'] + "\"")
        buildConfigField("String", "BASE_URL", "\"" + localProperties['BASE_URL'] + "\"")
        /*    buildConfigField("String", "OAuth2Username", "\"" + localProperties['OAuth2Username'] + "\"")
            buildConfigField("String", "OAuth2Password", "\"" + localProperties['OAuth2Password'] + "\"")*/
        buildConfigField("String", "GRANT_TYPE", "\"" + localProperties['GRANT_TYPE'] + "\"")

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            //abiFilters 'armeabi-v7a', 'arm64-v8a'

            /*abiFilters "arm64-v8a",
                    "armeabi-v7a",
                    "arm64-v8a",
                    "armeabi",
                    "armeabi-v7a"*/
        }
    }

    buildTypes {
        release {
            debuggable false
            //minifyEnabled false
            crunchPngs false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    /*sourceSets {
        main {
            //jniLibs.srcDir 'libs'
            //manifest.srcFile 'AndroidManifest.xml'
        }
    }*/
}

/*repositories {
    flatDir {
       // dirs 'libs'
    }
}*/

dependencies {
    implementation project(":app")
    //Shared Library
    implementation project(":common")
    //
    //implementation fileTree(include: ['*.jar', '.so'], dir: 'libs')
    // implementation project(':fingerprintlib')
    //implementation(name: 'A26Library-debug', ext: 'aar')
    //implementation files('libs/A26Library-debug.aar')

    implementation 'androidx.core:core-ktx:' + rootProject.kotlinCoreVersion
    //
    implementation 'androidx.recyclerview:recyclerview:' + rootProject.recyclerViewVersion
    implementation 'androidx.appcompat:appcompat:' + rootProject.supportLibVersion
    implementation 'com.google.android.material:material:' + rootProject.materialVersion
    //implementation 'androidx.constraintlayout:constraintlayout:' + rootProject.constraintLayoutVersion
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:' + rootProject.mapsVersion
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    //
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:' + rootProject.testVersion
    androidTestImplementation 'androidx.test:rules:' + rootProject.testVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion

    //Java
    annotationProcessor "com.google.dagger:dagger-android-processor:" + rootProject.googleDaggerVersion
    annotationProcessor "com.google.dagger:dagger-compiler:" + rootProject.googleDaggerVersion
    //Kotlin
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.googleDaggerVersion
    kapt 'com.google.dagger:dagger-android-processor:' + rootProject.googleDaggerVersion
    //navigation component
    // Java language implementation
    implementation 'androidx.navigation:navigation-fragment:' + rootProject.navigationUIVersion
    implementation 'androidx.navigation:navigation-ui:' + rootProject.navigationUIVersion
    // Kotlin
    implementation 'androidx.navigation:navigation-fragment-ktx:' + rootProject.navigationUIVersion
    implementation 'androidx.navigation:navigation-ui-ktx:' + rootProject.navigationUIVersion
    // Feature module Support
    implementation 'androidx.navigation:navigation-dynamic-features-fragment:' + rootProject.navigationUIVersion
    // Testing Navigation
    androidTestImplementation 'androidx.navigation:navigation-testing:' + rootProject.navigationUIVersion
    //rounded imageview
    implementation 'com.makeramen:roundedimageview:' + rootProject.roundedImageView
    //MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:' + rootProject.mpAndroidChartVersion
    //image picker
    implementation 'com.github.ronnieotieno:Ronnie-Image-Picker:' + rootProject.imagePicker
    //toasty toast
    implementation 'com.github.GrenderG:Toasty:' + rootProject.toastyVersion
    //Room and RXJava Support
    /*implementation 'androidx.room:room-runtime:2.3.0'
     annotationProcessor 'androidx.room:room-compiler:2.3.0'
     implementation 'androidx.room:room-rxjava2:2.3.0'*/
    implementation 'androidx.room:room-runtime:' + rootProject.archRoomVersion
    implementation "androidx.room:room-ktx:" + rootProject.archRoomVersion
    kapt "androidx.room:room-compiler:" + rootProject.archRoomVersion
    implementation 'androidx.room:room-rxjava2:2.4.2'
    //RXJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    //shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    //avatar generator
    implementation 'com.first.avatargenerator:AvatarImageGenerator:1.4'
    //photo view
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    //work manager
    // (Java only)
    implementation "androidx.work:work-runtime:" + rootProject.workVersion
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:" + rootProject.workVersion
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:" + rootProject.workVersion
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:" + rootProject.workVersion
    //image compressor
    implementation 'id.zelory:compressor:3.0.1'
    //sweetAlert dialog
    implementation 'com.github.f0ris.sweetalert:library:' + rootProject.sweetDialogVersion


    //scan ID library
    // implementation project(":scannerlib")

    //rack month picker
    implementation 'com.github.kal72:RackMonthPicker:1.6.1'

    //circular imageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //icon-switch library
    implementation 'com.polyak:icon-switch:1.0.0'
    implementation "androidx.core:core-ktx:+"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Encryption Lib
//    debugImplementation 'com.ekenya.android.encryptionlib.debug:encryptionlib:'+rootProject.ekenyeEntryptionLibVersion
//    releaseImplementation'com.ekenya.android:encryptionlib:'+rootProject.ekenyeEntryptionLibVersion
//    //Validations Lib
//    debugImplementation 'co.ke.ekenya.lib.validationslib.debug:validationslib:'+rootProject.ekenyaValidationsLibVersion
//    releaseImplementation 'co.ke.ekenya.lib.validationslib:validationslib:'+rootProject.ekenyaValidationsLibVersion
//    //Networking Lib
//    debugImplementation 'co.ke.ekenya.networkLib.networklib.debug:networklib:'+rootProject.ekenyaNetworkLibVersion
//    releaseImplementation 'co.ke.ekenya.networkLib.networklib:networklib:'+rootProject.ekenyaNetworkLibVersion
//    //Data Repo Lib
//    debugImplementation'devops.mobile.datarepolib.debug:datarepolib:'+rootProject.ekenyaDataRepoLibVersion
//    releaseImplementation 'devops.mobile.datarepolib:datarepolib:'+rootProject.ekenyaDataRepoLibVersion
//    //Logging Lib
//    debugImplementation 'ekenya.rnd.logginglibraryImp.logginglib.debug:logginglib:'+rootProject.ekenyaLoggingLibVersion
//    releaseImplementation 'ekenya.rnd.logginglibraryImp.logginglib:logginglib:'+rootProject.ekenyaLoggingLibVersion
}
repositories {
    mavenCentral()
}